// AUTO-GENERATED by rails_typed_api. Do not edit manually.
import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'

export type UsersIndexRequest = undefined;

export type UsersIndexResponse = { id: number; name: string; email: string; created_at: string; updated_at: string; }[];

export interface UsersCreateRequest { user: { name: string; email: string; }; }

export interface UsersCreateResponse { id: number; name: string; email: string; created_at: string; }

export type UsersShowRequest = undefined;

export interface UsersShowResponse { id: number; name: string; email: string; created_at: string; updated_at: string; }

// Basic RTK Query API (experimental)
export const api = createApi({
  reducerPath: 'api',
  baseQuery: fetchBaseQuery({ baseUrl: '/' }),
  endpoints: (build) => ({
    usersIndex: build.query<UsersIndexResponse, UsersIndexRequest>({
      query: (params) => ({ url: '/api/users', method: 'GET', params })
    }),
          usersCreate: build.mutation<UsersCreateResponse, UsersCreateRequest>({
      query: (body) => ({ url: '/api/users', method: 'POST', body })
    }),
          usersShow: build.query<UsersShowResponse, UsersShowRequest>({
      query: (params) => ({ url: '/api/users/:id', method: 'GET', params })
    })
  })
})

export const { useUsersIndexQuery, useUsersCreateMutation, useUsersShowQuery } = api
